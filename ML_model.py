# -*- coding: utf-8 -*-
"""Deep learning model 1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Akr73M1OYDcZDIRlHxUPaXfQj0NsKyNJ
"""

import pandas as pd

import numpy as np

df = df = pd.read_csv('/content/diabetes.csv')

df.head()

X = df.drop("Outcome",axis=1)

y = df["Outcome"]
print(X.shape)
print(y.shape)

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42,stratify=y)

#model building
import tensorflow as tf
from tensorflow import keras

model = keras.Sequential([
    keras.layers.Dense(units=50,activation="relu",input_shape=(8,)),
    keras.layers.Dense(units=1,activation="sigmoid")
])

model.summary()

model.compile(optimizer="adam",
              loss="binary_crossentropy",
              metrics="accuracy")

model.fit(x=X_train,y=y_train,epochs=100,validation_data=(X_test,y_test))

model.evaluate(X_train,y_train)

model.evaluate(X_test,y_test)

#Scaled data
from sklearn.preprocessing import StandardScaler
scale=StandardScaler()

X_train_scaled=scale.fit_transform(X_train)
X_test_scaled=scale.transform(X_test)

model_1 = keras.Sequential([
    keras.layers.Dense(units=50,activation="relu",input_shape=(8,)),
    keras.layers.Dense(units=1,activation="sigmoid")
])

model_1.compile(optimizer="adam",
              loss="binary_crossentropy",
              metrics="accuracy")

model_1.fit(x=X_train_scaled,y=y_train,epochs=100,validation_data=(X_test_scaled,y_test))

model_1.evaluate(X_train_scaled,y_train)

model.evaluate(X_test_scaled,y_test)

y_train_pred=model_1.predict(X_train_scaled)

y_test_pred=model_1.predict(X_test_scaled)

print(y_train_pred.shape)
print(y_test_pred.shape)

y_train.shape

y_train_pred[:5]

y_train_pred_final = [1 if i>0.5 else 0 for i in y_train_pred]
y_test_pred_final = [1 if i>0.5 else 0 for i in y_test_pred]

from sklearn.metrics import classification_report

print(classification_report(y_train,y_train_pred_final))

